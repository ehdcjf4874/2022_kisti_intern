install.packages("remotes")
remotes::install_github('haven-jeon/KoNLP', upgrade = "never", INSTALL_opts=c("--no-multiarch"))
library(KoNLP)
useSejongDic()
useNIADic()
SimplePos22(안녕하ㅔ요요)
SimplePos22("안녕하세요요")
install.packages("rvest")
install.packages("httr")
setwd("C://R")
library(rvest)
library(httr)
url='https://search.daum.net/search?nil_suggest=btn&w=blog&DA=SBC&q=%EC%9A%B0%EB%8F%84%EB%A7%9B%EC%A7%91%EC%B6%94%EC%B2%9C'
response = GET(url)
htxt=read_html(response)
comments = html_nodes(htxt, 'div.cont_inner')
View(htxt)
View(comments)
View(comments)
View(comments)
View(comments)
commetns
comments
response
htxt
data html_text(commnets)
data=html_text(commnets)
data=html_text(comments)
data
wrtie(data,"우도맛집추천.txt")
write(data,"우도맛집추천.txt")
library(KoNLP)
data1<-readlines("우도맛집추천.txt")
data1<-readlines("우도맛집추천.txt")
data1<-readLines("우도맛집추천.txt")
data1
data2<-sapply(data1,extractNoun,USE.NAMES = F)
data2
data2<-sapply(data1,extractNoun,USE.NAMES = T)
data2
data2<-sapply(data1,extractNoun,USE.NAMES = F)
data2
data3<- unlist(data2)
data3
data3<-Filter(function(x){nchar(x)>=2},data3)
data3
write(unlist(data3),"우도 맛집 명사.txt")
data3
#gsub를 이용하여 불용어 텍스트를 제거 또는 변환
data3=gsub("[0-9],",data3) #숫자를 공백으로
library(gsub)
#gsub를 이용하여 불용어 텍스트를 제거 또는 변환
data3=gsub("[0-9],",data3) #숫자를 공백으로
#gsub를 이용하여 불용어 텍스트를 제거 또는 변환
data3=gsub("[0-9],"",data3) #숫자를 공백으로
data3=gsub("[a-z]","",data3) #소문자 알파벳을 공백으로
data3=gsub("[A-z]","",data3) #대문자 알파벳을 공백으로
data3=gsub(":punct:","",data3) #특수기호를 공백으로
#gsub를 이용하여 불용어 텍스트를 제거 또는 변환
data3=gsub("[0-9]","",data3) #숫자를 공백으로
data3=gsub("[a-z]","",data3) #소문자 알파벳을 공백으로
data3=gsub("[A-z]","",data3) #대문자 알파벳을 공백으로
data3=gsub(":punct:","",data3) #특수기호를 공백으로
data3
data3=gsub(":punct:","",data3) #특수기호를 공백으로
data3
data3=gsub("[:punct:]","",data3) #특수기호를 공백으로
data3
#gsub를 이용하여 불용어 텍스트를 제거 또는 변환
data3=gsub("[0-9]","",data3) #숫자를 공백으로
data3=gsub("[a-z]","",data3) #소문자 알파벳을 공백으로
data3=gsub("[A-z]","",data3) #대문자 알파벳을 공백으로
data3=gsub("[:punct:]","",data3) #특수기호를 공백으로
data3
z
data3=gsub("[A-Z]","",data3) #대문자 알파벳을 공백으로
data3=gsub("[:punct:]","",data3) #특수기호를 공백으로
data3
setwd("C://R")
install.packages("rvest")
install.packages("httr")
library(rvest)
library(httr)
library(KoNLP)
url='https://search.daum.net/search?nil_suggest=btn&w=blog&DA=SBC&q=%EC%9A%B0%EB%8F%84%EB%A7%9B%EC%A7%91%EC%B6%94%EC%B2%9C'
response = GET(url)
response
htxt=read_html(response)
htxt
comments = html_nodes(htxt, 'div.cont_inner')
comments
data=html_text(comments)
install.packages("rvest")
response = GET(url)
response
htxt=read_html(response)
htxt
comments = html_nodes(htxt, 'div.cont_inner')
comments
data=html_text(comments)
data
write(data,"우도맛집추천.txt")
#데이터를 명사로 전처리 과정
data1<-readLines("우도맛집추천.txt")
data1
data2<-sapply(data1,extractNoun,USE.NAMES = F)
data2
data3<- unlist(data2)
data3
data3<-Filter(function(x){nchar(x)>=2},data3)
data3
write(unlist(data3),"우도 맛집 명사.txt")
data3
#gsub를 이용하여 불용어 텍스트를 제거 또는 변환
data3=gsub("[0-9]","",data3) #숫자를 공백으로
data3=gsub("[a-z]","",data3) #소문자 알파벳을 공백으로
data3=gsub("[A-Z]","",data3) #대문자 알파벳을 공백으로
data3=gsub("[:punct:]","",data3) #특수기호를 공백으로
data3
write(unlist(data3),"우도 맛집 명사.txt")
data3
setwd("C://R")
#install.packages("rvest")
#install.packages("httr")
library(rvest)
library(httr)
library(KoNLP)
url='https://search.daum.net/search?nil_suggest=btn&w=blog&DA=SBC&q=%EC%9A%B0%EB%8F%84%EB%A7%9B%EC%A7%91%EC%B6%94%EC%B2%9C'
response = GET(url)
response
htxt=read_html(response)
htxt
comments = html_nodes(htxt, 'div.cont_inner')
comments
data=html_text(comments)
data
write(data,"우도맛집추천.txt")
#데이터를 명사로 전처리 과정
data1<-readLines("우도맛집추천.txt")
data1
data2<-sapply(data1,extractNoun,USE.NAMES = F)
data2
data3<- unlist(data2)
data3
data3<-Filter(function(x){nchar(x)>=2},data3)
data3
write(unlist(data3),"우도 맛집 명사.txt")
data3
#gsub를 이용하여 불용어 텍스트를 제거 또는 변환
data3=gsub("[:punct:]","",data3) #특수기호를 공백으로
data3=gsub("[0-9]","",data3) #숫자를 공백으로
data3=gsub("[a-z]","",data3) #소문자 알파벳을 공백으로
data3=gsub("[A-Z]","",data3) #대문자 알파벳을 공백으로
data3
#gsub를 이용하여 불용어 텍스트를 제거 또는 변환
data3=gsub("[[:punct:]]","",data3) #특수기호를 공백으로
data3
gsub(" ","",data3)
data3
gsub(" ","",data3)
data3=gsub(" ","",data3)
data3
table(data3)
sort(table(data3))
library(dplyr)
install.packages("dplyr")
library(dplyr)
data3 <- data3 %>% filter(data3 != '') # data3의 공백제거
data3 <- data3 %>% filter(data3 != '') # data3의 공백제거
data3 <- data3!= '' # data3의 공백제거
data3
setwd("C://R")
#install.packages("rvest")
#install.packages("httr")
library(rvest)
library(httr)
library(KoNLP)
url='https://search.daum.net/search?nil_suggest=btn&w=blog&DA=SBC&q=%EC%9A%B0%EB%8F%84%EB%A7%9B%EC%A7%91%EC%B6%94%EC%B2%9C'
response = GET(url)
response
htxt=read_html(response)
htxt
comments = html_nodes(htxt, 'div.cont_inner')
comments
data=html_text(comments)
data
write(data,"우도맛집추천.txt")
#데이터를 명사로 전처리 과정
data1<-readLines("우도맛집추천.txt")
data1
data2<-sapply(data1,extractNoun,USE.NAMES = F)
data2
data3<- unlist(data2)
data3
data3<-Filter(function(x){nchar(x)>=2},data3)
data3
write(unlist(data3),"우도 맛집 명사.txt")
data3
#gsub를 이용하여 불용어 텍스트를 제거 또는 변환
data3=gsub("[[:punct:]]","",data3) #특수기호를 공백으로
data3=gsub("[0-9]","",data3) #숫자를 공백으로
data3=gsub("[a-z]","",data3) #소문자 알파벳을 공백으로
data3=gsub("[A-Z]","",data3) #대문자 알파벳을 공백으로
data3
data3=data3[data3!='']
data3
table(data3)
table(sort(data3))
sort(table(data3))
order(table(data3))
sort(table(data3),decreasing=T)
library(RColorBrewer)
palete<-brewer.pal(9,"Set3")
wordcloud(names(data3),freq=data3,scale=c(4,1),rot.per=0)
install.packages("wordcloud")
library(wordcloud)
wordcloud(names(data3),freq=data3,scale=c(4,1),rot.per=0)
wordcloud(names(data3),freq=wordcount,scale=c(4,1),rot.per=0)
wordcloud(names(data3),freq=data3,scale=c(4,1),rot.per=0)
wordcloud(names(data3),freq=data3,scale=c(4,1),rot.per=0,
ramdom.order=F,random.color = T,colors=palete)
wordcloud(names(data3),freq=data3,scale=c(4,1),rot.per=0,
ramdom.order=F,random.color = T,colors=palete)
wordcloud(names(data3),scale=c(4,1),rot.per=0,
ramdom.order=F,random.color = T,colors=palete)
wordcloud(names(data3),freq=data3,scale=c(4,1),rot.per=0,
ramdom.order=F,random.color = T,colors=palete)
data3
wordcount=table(data3)
wordcount
sort(wordcount,decreasing=T)
wordcloud(names(wordcount),freq=wordcount,scale=c(4,1),rot.per=0,
ramdom.order=F,random.color = T,colors=palete)
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0,
ramdom.order=F,random.color = T,colors=palete)
wordcloud(names(wordcount),freq=wordcount,scale=c(4,2),rot.per=0,
ramdom.order=F,random.color = T,colors=palete)
wordcloud(names(wordcount),freq=wordcount,scale=c(4,1),rot.per=0,
ramdom.order=F,random.color = T,colors=palete)
data3=gsub("우도","",data3) #대문자 알파벳을 공백으로
data3=data3[data3!='']
data3
wordcount=table(data3)
wordcount
sort(wordcount,decreasing=T)
library(RColorBrewer)
palete<-brewer.pal(9,"Set3")
wordcloud(names(wordcount),freq=wordcount,scale=c(4,1),rot.per=0,
ramdom.order=F,random.color = T,colors=palete)
data3=gsub("우도,추천,맛집","",data3) #대문자 알파벳을 공백으로
data3=data3[data3!='']
data3
wordcount=table(data3)
wordcount
sort(wordcount,decreasing=T)
library(RColorBrewer)
palete<-brewer.pal(9,"Set3")
wordcloud(names(wordcount),freq=wordcount,scale=c(4,1),rot.per=0,
ramdom.order=F,random.color = T,colors=palete)
data3=gsub("우도","",data3) #대문자 알파벳을 공백으로
data3=gsub("추천","",data3) #대문자 알파벳을 공백으로
data3=gsub("맛집","",data3) #대문자 알파벳을 공백으로
data3=data3[data3!='']
data3
wordcount=table(data3)
wordcount
sort(wordcount,decreasing=T)
library(RColorBrewer)
palete<-brewer.pal(9,"Set3")
wordcloud(names(wordcount),freq=wordcount,scale=c(4,1),rot.per=0,
ramdom.order=F,random.color = T,colors=palete)
